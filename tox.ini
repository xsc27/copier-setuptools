[tox]
minversion = 3.7.0
skip_missing_interpreters = {env:TOX_SKIP_MISSING_INTERPRETERS:true}
# skipsdist=True
envlist = py,lint,pkg

[testenv]
description = Run Tests
basepython = python3
package = wheel
passenv =
    CI
    DOCKER_*
    HOME
    JUNIT_*
    PODMAN_*
    PYTEST_*
    SSH_AUTH_SOCK
    TERM
    XDG_*
setenv =
deps = -r requirements/requirements.txt
commands =
    pytest {posargs:test}

[testenv:docs]
description = Build Documentation
passenv = *
usedevelop = true
deps = -r requirements/docs.txt
commands =
    mkdocs {posargs:build}

[testenv:lint]
description = Static Analysis
usedevelop = true
deps =
    -r requirements/test.txt
    -r requirements/lint.txt
commands =
    flake8 --verbose src/ tests/ setup.py
    pylint src/ tests/ setup.py
    bandit -rc pyproject.toml src/ tests/

[testenv:pkg]
description = Check Distribution Package
skip_install = true
deps =
    build
    pyroma
    readme_renderer[md]
    twine
commands_pre =
    pyproject-build --wheel --outdir dist .
commands =
    pyroma .
    twine check dist/*

[testenv:pin]
description = Pin Dependencies
skip_install = true
deps = pip-tools
allowlist_externals =
    sh
    mkdir
# The legacy resolver is deprecated and will be removed in future versions.
# The default resolver will be change to 'backtracking' in 7.0.0 version
# Specify --resolver=backtracking to silence this warning.
commands =
    mkdir -p requirements
    pip-compile --resolver=backtracking --generate-hashes --upgrade --output-file=requirements/requirements.txt pyproject.toml
    sh -c "\
      for EXTRA in docs lint test; do \
        cp {toxinidir}/requirements/requirements.txt requirements/$EXTRA.txt ;\
        pip-compile --resolver=backtracking --extra=$EXTRA --generate-hashes --reuse-hashes --output-file=requirements/$EXTRA.txt pyproject.toml ;\
      done \
    "

[flake8]
max-line-length = 98
extend-ignore =
    D105, # Missing docstring in magic method
