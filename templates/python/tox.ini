[tox]
requires =
    tox>=4.2
env_list =
    py
    lint
    pkg

[testenv]
description = Run Tests
base_python = python3
package = wheel
deps =
    -rrequirements/requirements.txt
    -rrequirements/test.txt
pass_env =
    CI
    DOCKER_*
    HOME
    JUNIT_*
    PODMAN_*
    PYTEST_*
    SSH_AUTH_SOCK
    TERM
    XDG_*
set_env =
commands =
    pytest {posargs:test}

[testenv:lint]
description = Static Analysis
package = editable
deps =
    -rrequirements/lint.txt
    -rrequirements/test.txt
commands =
    pylint --recursive=true src tests
    bandit -rc pyproject.toml src tests

[testenv:pkg]
description = Check Distribution Package
skip_install = true
deps =
    build
    pyroma
    readme_renderer[md]
    twine
commands_pre =
    pyproject-build --wheel --outdir dist .
commands =
    pyroma .
    twine check dist/*

[testenv:docs]
description = Build Documentation
package = editable
deps =
    -rrequirements/docs.txt
pass_env =
    *
commands =
    mkdocs {posargs:build}

[testenv:pin]
description = Pin Dependencies
skip_install = true
deps =
    pip-tools
commands =
    mkdir -p requirements
    pip-compile --resolver=backtracking --generate-hashes --upgrade --output-file=requirements/requirements.txt pyproject.toml
    sh -c " \
      for EXTRA in docs lint test; do \
      cp {toxinidir}/requirements/requirements.txt requirements/$EXTRA.txt ; \
      pip-compile --resolver=backtracking --extra=$EXTRA --generate-hashes --reuse-hashes --output-file=requirements/$EXTRA.txt pyproject.toml ; \
      done \
      "
allowlist_externals =
    mkdir
    sh

[flake8]
max-line-length = 98
extend-ignore =
    D105, # Missing docstring in magic method
