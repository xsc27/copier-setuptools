"""Command Line Interface."""
import argparse
import logging
import sys
from typing import Any, Sequence

import {{ package_name }}.main
from {{ package_name }}.exceptions import {{ project_name.title().replace(' ', '') }}Error


def get_parsed_args(
    args: Sequence[Any] | None = None, prog: str | None = None
) -> argparse.Namespace:
    """Get parsed argparse agruments."""
    parser = argparse.ArgumentParser(
        prog=prog,
        description="{{ project_short_description }}",
        allow_abbrev=False,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter,
    )

    parser.add_argument(
        "-l",
        "--log-level",
        choices=(logging.getLevelName(i_).lower() for i_ in range(0, 51, 10)),
        default="info",
        help="Set log level",
    )

    return parser.parse_args(args)


def cli(args: Sequence[Any] | None = None, prog: str | None = None) -> None:
    """Entrypoint for cli."""
    parsed_args = get_parsed_args(args, prog)
    logging.basicConfig(level=getattr(logging, parsed_args.log_level.upper()))
    _logger = logging.getLogger(__name__)
    _logger.debug(parsed_args)
    try:
        {{ package_name }}.main.run(**vars(parsed_args))
    except {{ project_name.title().replace(' ', '') }}Error as err:
        sys.exit(str(err))
